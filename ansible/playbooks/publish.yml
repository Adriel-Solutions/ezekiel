- name: Publish
  hosts: all
  become: true
  become_user: adriel
  become_method: su

  vars:
    date: "{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M') }}"

  tasks:
    - ping: ~

    - name: Determine whether code is pushed already
      become: false
      command: git diff --exit-code
      delegate_to: localhost
      args:
        chdir: "{{ playbook_dir }}/../../"
      register: need_to_push
      failed_when: need_to_push.rc != 1 and need_to_push.rc != 0

    - name: Push local code to Github
      become: false
      command: "{{ item }}"
      delegate_to: localhost
      args:
        chdir: "{{ playbook_dir }}/../../"
      with_items:
        - git add .
        - git commit -m "Publish new version"
        - git push -u origin master
      when:
        - need_to_push.rc != 0

    - name: Compress and move previous "current" code into "versions"
      community.general.archive:
        path:
          - /var/www/html/app/current/app
          - /var/www/html/app/current/native
          - /var/www/html/app/current/composer.json
          - /var/www/html/app/current/composer.lock
          - /var/www/html/app/current/ezekiel
        dest: /var/www/html/app/versions/latest.tar.gz

    - name: Rename brand new "latest.tar.gz" into a date-formatted filename
      command: "mv latest.tar.gz version-{{ date }}.tar.gz"
      args:
        chdir: /var/www/html/app/versions

    - name: Pull code remotely from Github
      git:
        repo: "{{ github_repository_url }}"
        dest: /var/www/html/app/current
        update: yes
        force: yes
        version: master

    - name: Install dependencies
      command: composer install
      args:
        chdir: /var/www/html/app/current/

    - name: Update dotenv configuration
      copy:
        src: "{{ playbook_dir }}/../../configuration/.production.env"
        dest: /var/www/html/app/current/configuration/.custom.env

    - name: Run migrations
      command: ./ezekiel run:migrations
      args:
        chdir: /var/www/html/app/current

    - name: Find all previous versions
      find:
        path: /var/www/html/app/versions
      register: versions

    - name: Keep only the 5 last releases
      file:
        path: "{{ item.path }}"
        state: absent
      with_items:
        - "{{ (versions.files | sort(attribute='ctime'))[:-5] }}"

